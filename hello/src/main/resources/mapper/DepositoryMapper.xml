<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="loan.easyLoan.mapper.DepositoryMapper">
  <resultMap id="BaseResultMap" type="loan.easyLoan.entity.Depository">
    <id column="funds_account" jdbcType="VARCHAR" property="fundsAccount" />
    <result column="depository_account" jdbcType="VARCHAR" property="depositoryAccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    funds_account, depository_account
  </sql>
  <select id="selectByExample" parameterType="loan.easyLoan.entity.DepositoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from depository
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from depository
    where funds_account = #{fundsAccount,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from depository
    where funds_account = #{fundsAccount,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="loan.easyLoan.entity.DepositoryExample">
    delete from depository
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="loan.easyLoan.entity.Depository">
    insert into depository (funds_account, depository_account)
    values (#{fundsAccount,jdbcType=VARCHAR}, #{depositoryAccount,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="loan.easyLoan.entity.Depository">
    insert into depository
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fundsAccount != null">
        funds_account,
      </if>
      <if test="depositoryAccount != null">
        depository_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fundsAccount != null">
        #{fundsAccount,jdbcType=VARCHAR},
      </if>
      <if test="depositoryAccount != null">
        #{depositoryAccount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="loan.easyLoan.entity.DepositoryExample" resultType="java.lang.Long">
    select count(*) from depository
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update depository
    <set>
      <if test="record.fundsAccount != null">
        funds_account = #{record.fundsAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.depositoryAccount != null">
        depository_account = #{record.depositoryAccount,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update depository
    set funds_account = #{record.fundsAccount,jdbcType=VARCHAR},
      depository_account = #{record.depositoryAccount,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="loan.easyLoan.entity.Depository">
    update depository
    <set>
      <if test="depositoryAccount != null">
        depository_account = #{depositoryAccount,jdbcType=VARCHAR},
      </if>
    </set>
    where funds_account = #{fundsAccount,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="loan.easyLoan.entity.Depository">
    update depository
    set depository_account = #{depositoryAccount,jdbcType=VARCHAR}
    where funds_account = #{fundsAccount,jdbcType=VARCHAR}
  </update>
</mapper>