<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="loan.easyLoan.mapper.TradeMapper">
  <resultMap id="BaseResultMap" type="loan.easyLoan.entity.Trade">
    <id column="serial_number" jdbcType="INTEGER" property="serialNumber" />
    <result column="bill_id" jdbcType="INTEGER" property="billId" />
    <result column="in_bound_account" jdbcType="VARCHAR" property="inBoundAccount" />
    <result column="out_bound_account" jdbcType="VARCHAR" property="outBoundAccount" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="limit_months" jdbcType="INTEGER" property="limitMonths" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="pay_rate" jdbcType="REAL" property="payRate" />
    <result column="exact_date" jdbcType="TIMESTAMP" property="exactDate" />
    <result column="next_time_pay" jdbcType="DOUBLE" property="nextTimePay" />
    <result column="repaid_principal" jdbcType="DOUBLE" property="repaidPrincipal" />
    <result column="repaid_interest" jdbcType="DOUBLE" property="repaidInterest" />
    <result column="liquidated_money" jdbcType="DOUBLE" property="liquidatedMoney" />
    <result column="should_repay_principal" jdbcType="DOUBLE" property="shouldRepayPrincipal" />
    <result column="should_repay_interest" jdbcType="DOUBLE" property="shouldRepayInterest" />
    <result column="should_repay_liquidated_money" jdbcType="DOUBLE" property="shouldRepayLiquidatedMoney" />
    <result column="finished_date" jdbcType="TIMESTAMP" property="finishedDate" />
  </resultMap>
  <sql id="Base_Column_List">
    serial_number, bill_id, in_bound_account, out_bound_account, money, limit_months, 
    pay_type, pay_rate, exact_date, next_time_pay, repaid_principal, repaid_interest, 
    liquidated_money, should_repay_principal, should_repay_interest, should_repay_liquidated_money, 
    finished_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade
    where serial_number = #{serialNumber,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trade
    where serial_number = #{serialNumber,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="loan.easyLoan.entity.Trade">
    insert into trade (serial_number, bill_id, in_bound_account, 
      out_bound_account, money, limit_months, 
      pay_type, pay_rate, exact_date, 
      next_time_pay, repaid_principal, repaid_interest, 
      liquidated_money, should_repay_principal, should_repay_interest, 
      should_repay_liquidated_money, finished_date
      )
    values (#{serialNumber,jdbcType=INTEGER}, #{billId,jdbcType=INTEGER}, #{inBoundAccount,jdbcType=VARCHAR}, 
      #{outBoundAccount,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, #{limitMonths,jdbcType=INTEGER}, 
      #{payType,jdbcType=INTEGER}, #{payRate,jdbcType=REAL}, #{exactDate,jdbcType=TIMESTAMP}, 
      #{nextTimePay,jdbcType=DOUBLE}, #{repaidPrincipal,jdbcType=DOUBLE}, #{repaidInterest,jdbcType=DOUBLE}, 
      #{liquidatedMoney,jdbcType=DOUBLE}, #{shouldRepayPrincipal,jdbcType=DOUBLE}, #{shouldRepayInterest,jdbcType=DOUBLE}, 
      #{shouldRepayLiquidatedMoney,jdbcType=DOUBLE}, #{finishedDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="loan.easyLoan.entity.Trade">
    insert into trade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serialNumber != null">
        serial_number,
      </if>
      <if test="billId != null">
        bill_id,
      </if>
      <if test="inBoundAccount != null">
        in_bound_account,
      </if>
      <if test="outBoundAccount != null">
        out_bound_account,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="limitMonths != null">
        limit_months,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payRate != null">
        pay_rate,
      </if>
      <if test="exactDate != null">
        exact_date,
      </if>
      <if test="nextTimePay != null">
        next_time_pay,
      </if>
      <if test="repaidPrincipal != null">
        repaid_principal,
      </if>
      <if test="repaidInterest != null">
        repaid_interest,
      </if>
      <if test="liquidatedMoney != null">
        liquidated_money,
      </if>
      <if test="shouldRepayPrincipal != null">
        should_repay_principal,
      </if>
      <if test="shouldRepayInterest != null">
        should_repay_interest,
      </if>
      <if test="shouldRepayLiquidatedMoney != null">
        should_repay_liquidated_money,
      </if>
      <if test="finishedDate != null">
        finished_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=INTEGER},
      </if>
      <if test="billId != null">
        #{billId,jdbcType=INTEGER},
      </if>
      <if test="inBoundAccount != null">
        #{inBoundAccount,jdbcType=VARCHAR},
      </if>
      <if test="outBoundAccount != null">
        #{outBoundAccount,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="limitMonths != null">
        #{limitMonths,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payRate != null">
        #{payRate,jdbcType=REAL},
      </if>
      <if test="exactDate != null">
        #{exactDate,jdbcType=TIMESTAMP},
      </if>
      <if test="nextTimePay != null">
        #{nextTimePay,jdbcType=DOUBLE},
      </if>
      <if test="repaidPrincipal != null">
        #{repaidPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="repaidInterest != null">
        #{repaidInterest,jdbcType=DOUBLE},
      </if>
      <if test="liquidatedMoney != null">
        #{liquidatedMoney,jdbcType=DOUBLE},
      </if>
      <if test="shouldRepayPrincipal != null">
        #{shouldRepayPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="shouldRepayInterest != null">
        #{shouldRepayInterest,jdbcType=DOUBLE},
      </if>
      <if test="shouldRepayLiquidatedMoney != null">
        #{shouldRepayLiquidatedMoney,jdbcType=DOUBLE},
      </if>
      <if test="finishedDate != null">
        #{finishedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="loan.easyLoan.entity.Trade">
    update trade
    <set>
      <if test="billId != null">
        bill_id = #{billId,jdbcType=INTEGER},
      </if>
      <if test="inBoundAccount != null">
        in_bound_account = #{inBoundAccount,jdbcType=VARCHAR},
      </if>
      <if test="outBoundAccount != null">
        out_bound_account = #{outBoundAccount,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="limitMonths != null">
        limit_months = #{limitMonths,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payRate != null">
        pay_rate = #{payRate,jdbcType=REAL},
      </if>
      <if test="exactDate != null">
        exact_date = #{exactDate,jdbcType=TIMESTAMP},
      </if>
      <if test="nextTimePay != null">
        next_time_pay = #{nextTimePay,jdbcType=DOUBLE},
      </if>
      <if test="repaidPrincipal != null">
        repaid_principal = #{repaidPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="repaidInterest != null">
        repaid_interest = #{repaidInterest,jdbcType=DOUBLE},
      </if>
      <if test="liquidatedMoney != null">
        liquidated_money = #{liquidatedMoney,jdbcType=DOUBLE},
      </if>
      <if test="shouldRepayPrincipal != null">
        should_repay_principal = #{shouldRepayPrincipal,jdbcType=DOUBLE},
      </if>
      <if test="shouldRepayInterest != null">
        should_repay_interest = #{shouldRepayInterest,jdbcType=DOUBLE},
      </if>
      <if test="shouldRepayLiquidatedMoney != null">
        should_repay_liquidated_money = #{shouldRepayLiquidatedMoney,jdbcType=DOUBLE},
      </if>
      <if test="finishedDate != null">
        finished_date = #{finishedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where serial_number = #{serialNumber,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="loan.easyLoan.entity.Trade">
    update trade
    set bill_id = #{billId,jdbcType=INTEGER},
      in_bound_account = #{inBoundAccount,jdbcType=VARCHAR},
      out_bound_account = #{outBoundAccount,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      limit_months = #{limitMonths,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_rate = #{payRate,jdbcType=REAL},
      exact_date = #{exactDate,jdbcType=TIMESTAMP},
      next_time_pay = #{nextTimePay,jdbcType=DOUBLE},
      repaid_principal = #{repaidPrincipal,jdbcType=DOUBLE},
      repaid_interest = #{repaidInterest,jdbcType=DOUBLE},
      liquidated_money = #{liquidatedMoney,jdbcType=DOUBLE},
      should_repay_principal = #{shouldRepayPrincipal,jdbcType=DOUBLE},
      should_repay_interest = #{shouldRepayInterest,jdbcType=DOUBLE},
      should_repay_liquidated_money = #{shouldRepayLiquidatedMoney,jdbcType=DOUBLE},
      finished_date = #{finishedDate,jdbcType=TIMESTAMP}
    where serial_number = #{serialNumber,jdbcType=INTEGER}
  </update>
</mapper>