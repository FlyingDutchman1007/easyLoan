<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="loan.easyLoan.mapper.UserRequiredInfoMapper">
  <resultMap id="BaseResultMap" type="loan.easyLoan.entity.UserRequiredInfo">
    <id column="id_card" jdbcType="CHAR" property="idCard" />
    <result column="phone_number" jdbcType="CHAR" property="phoneNumber" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id_card, phone_number, user_name, bank_account, user_type, password
  </sql>
  <select id="selectByExample" parameterType="loan.easyLoan.entity.UserRequiredInfo" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_required_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_required_info
    where id_card = #{idCard,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_required_info
    where id_card = #{idCard,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="loan.easyLoan.entity.UserRequiredInfo">
    delete from user_required_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="loan.easyLoan.entity.UserRequiredInfo">
    insert into user_required_info (id_card, phone_number, user_name, 
      bank_account, user_type, password
      )
    values (#{idCard,jdbcType=CHAR}, #{phoneNumber,jdbcType=CHAR}, #{userName,jdbcType=VARCHAR}, 
      #{bankAccount,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="loan.easyLoan.entity.UserRequiredInfo">
    insert into user_required_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idCard != null">
        id_card,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idCard != null">
        #{idCard,jdbcType=CHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="loan.easyLoan.entity.UserRequiredInfo" resultType="java.lang.Long">
    select count(*) from user_required_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_required_info
    <set>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=CHAR},
      </if>
      <if test="record.phoneNumber != null">
        phone_number = #{record.phoneNumber,jdbcType=CHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_required_info
    set id_card = #{record.idCard,jdbcType=CHAR},
      phone_number = #{record.phoneNumber,jdbcType=CHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="loan.easyLoan.entity.UserRequiredInfo">
    update user_required_info
    <set>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id_card = #{idCard,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="loan.easyLoan.entity.UserRequiredInfo">
    update user_required_info
    set phone_number = #{phoneNumber,jdbcType=CHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR}
    where id_card = #{idCard,jdbcType=CHAR}
  </update>

  <select id="findAll" resultMap="BaseResultMap">
    select * from user_required_info
  </select>
</mapper>