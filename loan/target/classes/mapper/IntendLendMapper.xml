<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="loan.easyLoan.mapper.IntendLendMapper">
  <resultMap id="BaseResultMap" type="loan.easyLoan.entity.IntendLend">
    <id column="bill_id" jdbcType="INTEGER" property="billId" />
    <id column="id_card" jdbcType="CHAR" property="idCard" />
    <result column="lend_money" jdbcType="DOUBLE" property="lendMoney" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>

  <!--  借出方选择好对手方并确定借出之后 -->
  <insert  id="insertIntendLend">
        insert into intend_lend
        values(#{bill_id},#{id_card},#{lend_money},#{start_date},1)
    </insert>

  <!-- 筹集齐资金后，债权关系确立，该笔交易才生效 -->
  <update id="updateState" parameterType="int">
        update intend_lend
        set state=2
        where bill_id=#{bill_id}
    </update>

  <!-- 借出方查看待交易记录 -->
  <select id="viewPendingTransaction" parameterType="String">
  select bill_id,intend_money,intend_borrow.start_date,pay_rate,pay_type,limit_months,state,raised_money,lend_money,intend_lend.start_date
  from intend_lend left join intend_borrow
  on bill_id
  where intend_lend.state=1 or intend_lend.state=4 and id_card=#{id_card}
  </select>

  <!-- 失效数据更新状态 -->
  <update id="updateInvalidState" parameterType="List">
    update intend_lend
    <foreach collection="list" item="billID" index="index" separator=",">
      set state=0
      where bill_id=#{billID}
    </foreach>
  </update>

  <sql id="Base_Column_List">
    bill_id, id_card, lend_money, start_date, state
  </sql>
  <insert id="insert" parameterType="loan.easyLoan.entity.IntendLend">
    insert into intend_lend (bill_id, id_card, lend_money, 
      start_date, state)
    values (#{billId,jdbcType=INTEGER}, #{idCard,jdbcType=CHAR}, #{lendMoney,jdbcType=DOUBLE}, 
      #{startDate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="loan.easyLoan.entity.IntendLend">
    insert into intend_lend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        bill_id,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="lendMoney != null">
        lend_money,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        #{billId,jdbcType=INTEGER},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=CHAR},
      </if>
      <if test="lendMoney != null">
        #{lendMoney,jdbcType=DOUBLE},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="loan.easyLoan.entity.IntendLend">
    update intend_lend
    <set>
      <if test="lendMoney != null">
        lend_money = #{lendMoney,jdbcType=DOUBLE},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where bill_id = #{billId,jdbcType=INTEGER}
      and id_card = #{idCard,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="loan.easyLoan.entity.IntendLend">
    update intend_lend
    set lend_money = #{lendMoney,jdbcType=DOUBLE},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where bill_id = #{billId,jdbcType=INTEGER}
      and id_card = #{idCard,jdbcType=CHAR}
  </update>
</mapper>